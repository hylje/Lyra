Lyra is a flexible calendaring and day planning application for Django.

BUT WAIT

Requires Django 1.3!

WHAT DO

- pip install lyra
- add lyra to INSTALLED_APPS
- import lyra and import lyra.root.urls to your URLconf
- make sure you're serving django static files
- syncdb

NOW WHAT

Check out the code, subclass `lyra.views.Lyra` and set app_name to
something else than "lyra", e.g. "octavia". You can then put your
customized templates in "octavia/" somewhere in template lookup path,
and may {% extend %} corresponding "lyra/" templates. Note that you do
not need to override all, or even any templates: Lyra will search the
parent classes' template paths too (looking up with app_name), in
Python method resolution order. Thanks to Django's URL namespacing,
you can run as many however customized instances of Lyra in your
project.

You can use a different model than `lyra.models.Reservation` by
assigning your own in your subclass, to the `model` attribute. The new
model should have `start` and `stop` database fields and use (a
subclass of) `lyra.models.ReservationQuerySet.as_manager()` as its
`objects` manager. You will also need to provide your own forms to the
CRUD, as attributes `reservation_form` and optionally
`reservation_create_form`. 

You can subclass inline for simple modifications.

There are some primitive, highly untested examples on subclassing in
`lyra.contrib`.

LICENSE

BSD 3-clause, see LICENSE